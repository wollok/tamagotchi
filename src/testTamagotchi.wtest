import tamagotchi.*

describe "tests del tamagotchi" {

	var tamagotchiComun
	var tamagotchiHambriento
	var tamagotchiTriste
	
	fixture {
		tamagotchiComun = new Tamagotchi()
		tamagotchiHambriento = new Tamagotchi()
		tamagotchiHambriento.ponerseHambriento()
		tamagotchiTriste = new Tamagotchi()
		tamagotchiTriste.ponerseTriste()
	}
		
	test "comer estando contento" {
		assert.equals(0, tamagotchiComun.felicidad())
		tamagotchiComun.comer()
		assert.equals(1, tamagotchiComun.felicidad())
	}
	
	test "comer estando hambriento" {
		tamagotchiHambriento.comer()
		assert.that(tamagotchiHambriento.estaContento())
	}
	
	test "comer estando triste hace poco" {
		assert.throwsExceptionWithMessage("No es correcto que coma si est√° triste hace poco", { tamagotchiTriste.comer() })
	}
	
	test "comer estando triste hace mucho" {
		var triste = tamagotchiTriste.estado()
		triste.cuandoSePusoTriste(new Date(1, 1, 2016))
		tamagotchiTriste.comer()
		assert.that(tamagotchiTriste.estaContento())
	}

	test "jugar solo contento primera vez" {
		tamagotchiComun.jugarSolo()
		assert.equals(2, tamagotchiComun.felicidad())
	}
	
	test "jugar solo contento 3 veces" {
		tamagotchiComun.jugarSolo()
		tamagotchiComun.jugarSolo()
		tamagotchiComun.jugarSolo()
		assert.equals(6, tamagotchiComun.felicidad())
		assert.equals("a Hambriento", tamagotchiComun.estado().kindName())
	}
		
		
	test "jugar solo triste" {
		tamagotchiTriste.jugarSolo()
		assert.that(tamagotchiTriste.estaContento())
	}

	test "jugar solo hambriento" {
		tamagotchiHambriento.jugarSolo()
		assert.equals(-4, tamagotchiHambriento.felicidad())
	}
	
	test "jugar con alguien triste" {
		tamagotchiTriste.jugarCon(tamagotchiHambriento)
		assert.equals(tamagotchiTriste.estaContento())
		assert.equals(tamagotchiHambriento.estaContento())
	}
	
	test "jugar con alguien contento" {
		tamagotchiComun.jugarCon(tamagotchiTriste)
		assert.equals(tamagotchiTriste.estaContento())
		assert.equals(4, tamagotchiComun.felicidad())
	}
	
}